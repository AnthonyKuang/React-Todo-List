{"ast":null,"code":"var _jsxFileName = \"/home/anthony/react/mdn/todo-react/src/App.js\";\nimport React, { useState } from 'react';\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n\nfunction App(props) {\n  // State hook\n  const [tasks, setTasks] = useState(props.tasks);\n  const taskList = tasks.map(task => /*#__PURE__*/React.createElement(Todo, {\n    name: task.name,\n    completed: task.completed,\n    id: task.id,\n    key: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }));\n  const taskNoun = taskList.length === 1 ? 'task' : 'tasks';\n  const headingText = `${taskList.length} ${taskNoun} remaining`;\n\n  function addTask(name) {\n    const newTask = {\n      id: `todo-${nanoid()}`,\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    console.log(tasks);\n  }\n\n  function toggleTaskCompleted(id) {\n    console.log(tasks[0]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoapp stack-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"React Todo List\"), /*#__PURE__*/React.createElement(Form, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters btn-group stack-exception\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, headingText), /*#__PURE__*/React.createElement(\"ul\", {\n    role: \"list\",\n    className: \"todo-list stack-large stack-exception\",\n    \"aria-labelledby\": \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, taskList));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/anthony/react/mdn/todo-react/src/App.js"],"names":["React","useState","nanoid","Todo","Form","FilterButton","App","props","tasks","setTasks","taskList","map","task","name","completed","id","toggleTaskCompleted","taskNoun","length","headingText","addTask","newTask","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACM,KAAK,CAACC,KAAP,CAAlC;AAEA,QAAME,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAUC,IAAI,iBAC7B,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEA,IAAI,CAACC,IADb;AAEE,IAAA,SAAS,EAAED,IAAI,CAACE,SAFlB;AAGE,IAAA,EAAE,EAAEF,IAAI,CAACG,EAHX;AAIE,IAAA,GAAG,EAAEH,IAAI,CAACG,EAJZ;AAKE,IAAA,mBAAmB,EAAEC,mBALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,CAAjB;AAUA,QAAMC,QAAQ,GAAGP,QAAQ,CAACQ,MAAT,KAAoB,CAApB,GAAwB,MAAxB,GAAiC,OAAlD;AACA,QAAMC,WAAW,GAAI,GAAET,QAAQ,CAACQ,MAAO,IAAGD,QAAS,YAAnD;;AAEA,WAASG,OAAT,CAAiBP,IAAjB,EAAuB;AACrB,UAAMQ,OAAO,GAAG;AAAEN,MAAAA,EAAE,EAAG,QAAOb,MAAM,EAAG,EAAvB;AAA0BW,MAAAA,IAAI,EAAEA,IAAhC;AAAsCC,MAAAA,SAAS,EAAE;AAAjD,KAAhB;AACAL,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,OAAX,CAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACD;;AAED,WAASQ,mBAAT,CAA6BD,EAA7B,EAAiC;AAC/BO,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAAC,CAAD,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEY,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHF,eAQE;AAAI,IAAA,EAAE,EAAC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,WADH,CARF,eAWE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,uCAFZ;AAGE,uBAAgB,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGT,QALH,CAXF,CADF;AAqBD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n\nfunction App(props) {\n  // State hook\n  const [tasks, setTasks] = useState(props.tasks);\n\n  const taskList = tasks.map(task => (\n    <Todo \n      name={task.name} \n      completed={task.completed} \n      id={task.id} \n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n    />\n  ));\n\n  const taskNoun = taskList.length === 1 ? 'task' : 'tasks';\n  const headingText = `${taskList.length} ${taskNoun} remaining`;\n\n  function addTask(name) {\n    const newTask = { id: `todo-${nanoid()}`, name: name, completed: false };\n    setTasks([...tasks, newTask]);\n    console.log(tasks);\n  }\n\n  function toggleTaskCompleted(id) {\n    console.log(tasks[0]);\n  }\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>React Todo List</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id=\"list-heading\">\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}