{"ast":null,"code":"var _jsxFileName = \"/home/anthony/react/mdn/todo-react/src/App.js\";\nimport React, { useState } from 'react';\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nfunction App(props) {\n  // State hook\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const taskList = tasks.map(task => /*#__PURE__*/React.createElement(Todo, {\n    name: task.name,\n    completed: task.completed,\n    id: task.id,\n    key: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }));\n  const taskNoun = taskList.length === 1 ? 'task' : 'tasks';\n  const headingText = `${taskList.length} ${taskNoun} remaining`;\n\n  function addTask(name) {\n    const newTask = {\n      id: `todo-${nanoid()}`,\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTasks);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoapp stack-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"React Todo List\"), /*#__PURE__*/React.createElement(Form, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters btn-group stack-exception\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, headingText), /*#__PURE__*/React.createElement(\"ul\", {\n    role: \"list\",\n    className: \"todo-list stack-large stack-exception\",\n    \"aria-labelledby\": \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, taskList));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/anthony/react/mdn/todo-react/src/App.js"],"names":["React","useState","nanoid","Todo","Form","FilterButton","FILTER_MAP","All","Active","task","completed","Completed","App","props","tasks","setTasks","filter","setFilter","taskList","map","name","id","toggleTaskCompleted","deleteTask","editTask","taskNoun","length","headingText","addTask","newTask","updatedTasks","remainingTasks","newName","editedTasks"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed,\n}\n\nfunction App(props) {\n  // State hook\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  const taskList = tasks.map(task => (\n    <Todo \n      name={task.name} \n      completed={task.completed} \n      id={task.id} \n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const taskNoun = taskList.length === 1 ? 'task' : 'tasks';\n  const headingText = `${taskList.length} ${taskNoun} remaining`;\n\n  function addTask(name) {\n    const newTask = { id: `todo-${nanoid()}`, name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, name: newName};\n      }\n      return task;\n    });\n    setTasks(editedTasks);\n  }\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>React Todo List</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id=\"list-heading\">\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}